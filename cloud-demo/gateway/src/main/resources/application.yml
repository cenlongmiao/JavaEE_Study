server:
  port: 10010 # 网关端口 网关端口，网关端口，网关端口
spring:
  application:
    name: gateway # 服务名称
  cloud:
    nacos:
      server-addr: localhost:8848 # nacos地址
    gateway:
      routes: # 网关路由配置
        - id: user-service # 路由id，自定义，只要唯一即可
          # uri: http://127.0.0.1:8081 # 路由的目标地址 http就是固定地址
          uri: lb://user-server # 路由的目标地址 lb就是负载均衡，后面跟服务名称
          predicates: # 路由断言，判断路由请求是否符合规则
             - Before=2037-01-20T17:42:47.789-07:00[America/Denver] # 使用的是断言工厂，spring提供了30多种断言工厂
             - Path=/user/** # 这个是按照路径匹配，只要以/user/开头就符合要求  将predicates路由代理到uri做负载均衡
#          filters: # 过滤器，经过路由之后，网关中还需要进行一系列过滤器链，然后才可以做负载均衡发送请求到微服务（局部过滤器，只还=争对某个服务有效）
#            - AddRequestHeader=wu, hao! # 添加请求头
      default-filters: # 全局过滤器，对所有路由都生效
        - AddRequestHeader=wu, hao! # 添加请求头
      globalcors: # 全局的跨域处理
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题（浏览器询问服务器是否支持跨域请求，浏览器同源策略导致）
        corsConfigurations:
          '[/**]':
            allowedOrigins: # 允许哪些网站的跨域请求
              - "http://localhost:8200"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域检测的有效期